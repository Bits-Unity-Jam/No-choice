/*using Assets.Script.Chunks;
using Chunks;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ChunkElementDataHolder : MonoBehaviour
{

    [SerializeField] private ChunkElementData _chunkElementData;



    [SerializeField]
    private ChunkMemberData _activeChunkMemberData;

    [SerializeField]
    private ChunkMemberData _autoGeneratedInitData;

    [SerializeField]
    private List<Collider2D> _collidersToEnable;


    public ChunkElementData ChunkElementData { get => _chunkElementData; set => _chunkElementData = value; }



    public ChunkMemberData GenerateInitData()
    {
        ChunkMemberData generatedInitData = new ChunkMemberData()
        {
            Index = transform.GetSiblingIndex(),
            InitLocalPosition = transform.localPosition,
            InitLocalRotation = transform.localRotation,
            MemberRb = GetComponent<Rigidbody2D>(),
            StartScale = transform.localScale
        };

        return generatedInitData;
    }

    public void ApplyData(ChunkMemberData chunkMemberData)
    {
        ActiveChunkMemberData = chunkMemberData;
    }

    public void ResetState()
    {
        _collidersToEnable.ForEach(coll => coll.enabled = true);
        gameObject.SetActive(true);
        if (_autoGeneratedInitData.MemberRb == default)
        {

            AutoGeneratedInitData = GenerateInitData();
            ActiveChunkMemberData = AutoGeneratedInitData;
        }

        transform.localScale = ActiveChunkMemberData.StartScale;
        transform.localRotation = ActiveChunkMemberData.InitLocalRotation;
        transform.localPosition = ActiveChunkMemberData.InitLocalPosition;
        ActiveChunkMemberData.MemberRb.velocity = default;
        ActiveChunkMemberData.MemberRb.Sleep();
        ActiveChunkMemberData.MemberRb.isKinematic = true;
    }

    private void OnTriggerEnter2D(Collider2D collision)
    {

        ActiveChunkMemberData.MemberRb.isKinematic = false;
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {

        ActiveChunkMemberData.MemberRb.isKinematic = false;
    }
}
*/